---
# TODO Ensure that deploy user is setup first
# TODO Ensure that apache is setup first
- name: Ensure git is installed
  apt: pkg=git
- name: Ensure that deploy owns /var/www
  file: owner=deploy group=deploy path=/var/www
- name: Generate the apache config for the app
  template: src=default
            dest=/etc/apache2/sites-available/default
  notify: Restart Apache
- name: Ensure that /var/www/shared exists
  file: path=/var/www/shared owner=deploy group=deploy state=directory
- name: Ensure that .env exists
  copy: src=../.env.staging dest=/var/www/shared/.env owner=deploy group=deploy
# TODO This is a nasty hack. Would be much nicer to do this in the capistrano
# deploy. But security concerns (the need for passwordless sudo) make this hard.
- name: Install foreman
  gem: name=foreman state=present user_install=no
- name: Ensure Procfile.vagrant copied
  copy: src=../Procfile.vagrant dest=/home/deploy/Procfile.vagrant
- name: Ensure upstart is setup for the application
  command: foreman export upstart /etc/init -u deploy -a scraping-platform -f /home/deploy/Procfile.vagrant --root /var/www/current
- name: Create sudoers ready for testing
  template: src=sudoers dest=/etc/sudoers.d/deploy.test owner=root group=root mode=0440
- name: Test sudoers
  command: visudo -c -f /etc/sudoers.d/deploy.test
- name: Make sudoers live
  command: mv -f /etc/sudoers.d/deploy.test /etc/sudoers.d/deploy
# TODO There are serious security concerns with doing this. This will probably be improved
# as Docker matures
- name: Add deploy to the docker group (so it has permissions to do dockery things)
  user: name=deploy groups=docker
- name: Install dependency for following command
  apt: pkg=python-mysqldb
- name: Create database
  mysql_db: name=scraping_vagrant
- name: Create directory /var/www/shared/config
  file: path=/var/www/shared/config owner=deploy group=deploy state=directory
- name: Copy over database configuration for application
  template: src=database.yml dest=/var/www/shared/config/database.yml owner=deploy group=deploy
- name: Dependency for following command
  apt: pkg=python-passlib
- name: Add basic authentication password
  htpasswd: path=/var/www/shared/htpasswd name=test password=test owner=root group=www-data mode=0640
- name: Set timezone in /etc/timezone
  copy: src=timezone dest=/etc/timezone
- name: Update timezone
  command: dpkg-reconfigure --frontend noninteractive tzdata
# TODO: Use special_time (or at least look at using it)
- name: Setting daily cron job for 11am
  cron: name="daily scraping" hour=11 minute=0 user=deploy job="cd /var/www/current && /home/deploy/.rvm/bin/rvm . do bundle exec rake app:auto_run_scrapers RAILS_ENV=vagrant"


