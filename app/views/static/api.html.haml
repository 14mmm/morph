- content_for :title, "API"
%h1= yield :title

%p The API allows you to programatically retrieve data from any public scraper using an SQL query. It's all pretty easy.

%pre
  %code
    GET #{api_url_in_html(content_tag(:em, "[scraper]"), content_tag(:em, "[sql]"))}

%p With a simple header for authentication

%pre
  %code
    = api_header(content_tag(:em, "[api_key]"))

%h2 Parameters

= semantic_form_for @scraper, html: {class: "form-horizontal"} do |f|
  = f.inputs do
    .string.input.optional.stringish.form-group#scraper_full_name_input
      %label.control-label.col-sm-1(for="scraper_full_name") [scraper]
      .col-sm-11
        %input.form-control#scraper_full_name(maxlength="255" name="scraper[full_name]" type="text" value="#{@scraper.full_name}")
        %span.help-block The full name of the scraper as seen in the url (e.g. #{@scraper.full_name})
    .string.input.optional.stringish.form-group#query_input
      %label.control-label.col-sm-1(for="query") [sql]
      .col-sm-11
        %input.form-control#query(maxlength="255" name="query" type="text" value="#{@query}")
        %span.help-block
          The SQL query to perform on the SQLite database that is the output of the scraper (e.g. "#{@query}").
          Ensure it is #{link_to "url encoded", "https://en.wikipedia.org/wiki/Percent-encoding"}.
    - if current_user
      .row
        .col-sm-6
          .string.input.optional.stringish.form-group#api_key_input
            %label.control-label.col-sm-2(for="api_key") [api_key]
            .col-sm-10
              %p.form-control-static#api_key= current_user.api_key
              %span.help-block
                Don't tell anyone else what the api key is
        .col-sm-3
          .select.input.optional.form-group#owner_input
            %select.form-control#owner(name="owner")
              = options_for_select(current_user.all_owners.map{|o| [o.nickname, o.api_key]})
            %span.help-block
              Choose whose api key you want to use
    - else
      .row
        .col-sm-6
          .string.input.optional.stringish.form-group#api_key_input
            %label.control-label.col-sm-2(for="api_key") [api_key]
            .col-sm-10
              %p#api_key
                = link_to "sign in with GitHub", user_omniauth_authorize_path(:github), class: "btn btn-default"

%h2 Example
%p
  To do the API query with the values above

%pre
  %code
    - if current_user
      = curl_command(content_tag(:span, current_user.api_key, class: "api_key"), content_tag(:span, @scraper.full_name, class: "full_name"), content_tag(:span, CGI::escape(@query), class: "query"))
    - else
      = curl_command(content_tag(:em, "[api_key]"), content_tag(:span, @scraper.full_name, class: "full_name"), content_tag(:span, CGI::escape(@query), class: "query"))

:javascript
  $(function() {
    function update_full_name() {
      $("code span.full_name").html($("#scraper_full_name").val());
    }

    function update_query() {
      $("code span.query").html(encodeURIComponent($("#query").val()));
    }

    function update_api_key() {
      api_key = $("#owner").val();
      $("#api_key").html(api_key);
      $("code span.api_key").html(api_key);
    }

    update_full_name();
    update_query();
    $("#scraper_full_name").change(update_full_name);
    $("#scraper_full_name").keyup(update_full_name);
    $("#query").change(update_query);
    $("#query").keyup(update_query);
    $("#owner").change(update_api_key);
  });
