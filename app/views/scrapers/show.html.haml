%h1
  = link_to @scraper.owner.to_param, @scraper.owner
  \/
  = link_to @scraper.name, @scraper

%h4= @scraper.description

= link_to "Go to GitHub", @scraper.github_url

- if @scraper.running?
  %p
    The scraper is <strong>running</strong>. It was started
    = time_ago_in_words(@scraper.started_at)
    ago. (For the time being you will need to refresh this page to update this</quiet>)

- if @scraper.owned_by?(current_user)
  = button_to "Run it!", run_scraper_path(@scraper), class: (@scraper.running? ? "btn btn-info disabled" : "btn btn-info")

- if @scraper.last_run
  %h2 Last Run
  %p
    = time_ago_in_words(@scraper.last_run_at)
    ago
  - unless @scraper.last_run_successful?
    .alert.alert-danger
      Failed with status code: #{@scraper.last_run_status_code}
  - unless @scraper.last_run.log_lines.empty?
    %h3 Console output
    %p Hint: Keep this to a minimum during normal use (so that things remain readable)
    %pre
      - @scraper.last_run.log_lines.order(:number).each do |line|
        -# TODO Highlight stderr differently
        %span{:class => line.stream}= line.text

- if @rows
  %h2 Data
  %ul
    %li= link_to "Download table (as CSV)", scraper_data_path(@scraper, :format => :csv)
    %li= link_to "Download SQLite database", scraper_data_path(@scraper, :format => :sqlite)
    %li= link_to "Use the API", api_path
  %p (First 10 rows)
  .table-responsive
    %table.table.table-striped.table-bordered.table-condensed.scraper-data
      - unless @rows.empty?
        %tr
          - @rows.first.each_key do |field|
            %th= field
      - @rows.each do |row|
        %tr
          - row.each_value do |v|
            %td= v

- if @scraper.owned_by?(current_user)
  %h2 Here be dragons!

  = button_to "Delete scraper", @scraper, {method: :delete, class: "btn btn-danger", confirm: "Delete #{@scraper.full_name}?"}
  %p This can't be undone  